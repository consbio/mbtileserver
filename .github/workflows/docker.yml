name: Build Docker images

on:
    push:
        branches:
            - main
        tags:
            - "v*.*.*"
    pull_request:
        paths:
            - ".github/workflows/docker.yml"
            - "Dockerfile"
            - "go.sum"
    workflow_dispatch:

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
    # disable unknown/unknown arch from showing up in ghcr.io

jobs:
    buildx:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        concurrency:
            # cancel jobs on PRs only
            group: ${{ github.workflow }}-${{ github.ref }}
            cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
              with:
                  platforms: "linux/amd64,linux/arm64"
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
              id: buildx
              with:
                  install: true

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  # add "type=ref,event=pr" if needed to test a PR
                  tags: |
                      type=raw,value=latest,enable={{is_default_branch}}
                      type=semver,pattern={{version}}

            - name: Login to Github Container Registry
              if: github.event_name != 'pull_request'
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                  context: .
                  platforms: linux/amd64,linux/arm64
                  provenance: false
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
