name: Test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    strategy:
      matrix:
        go: [1.16.x, 1.17.x, 1.18.x]
        os: [ubuntu-20.04, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      CGO_ENABLED: 1
    steps:
      - name: Install GCC (MacOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          brew update
          brew install gcc
      - name: Install GCC (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt update
          sudo apt install -y gcc-multilib g++-multilib
        shell: bash
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test
        run: go test -v ./...

  test-arm64:
    strategy:
      matrix:
        go: [1.16.x, 1.17.x, 1.18.x]

    runs-on: ubuntu-20.04
    env:
      CGO_ENABLED: 1
      GOOS: linux
      GOARCH: arm64
      CC: "/usr/bin/aarch64-linux-gnu-gcc"
    steps:
      - name: Install GCC and SQLite for Arm64
        uses: ryankurte/action-apt@v0.3.0
        with:
          arch: arm64
          packages: "gcc-10-aarch64-linux-gnu gcc-aarch64-linux-gnu libc6-dev:arm64 linux-libc-dev:arm64 libsqlite3-dev:arm64 gcc-multilib-arm-linux-gnueabihf:arm64"
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        run: go build .
        shell: bash
      - name: Verify build
        run: ls -lh mbtileserver
        shell: bash
      - name: Test
        run: go test -v ./...
        shell: bash

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Install GCC (Ubuntu)
        run: |
          sudo apt update
          sudo apt install -y gcc-multilib g++-multilib
        shell: bash
      - name: Install Go
        if: success()
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Calc coverage
        run: |
          go test -v -covermode=count -coverprofile=coverage.out ./...
      - name: Convert coverage.out to coverage.lcov
        uses: jandelgado/gcov2lcov-action@v1.0.6
      - name: Coveralls
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: coverage.lcov
